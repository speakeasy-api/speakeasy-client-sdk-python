"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from speakeasy_client_sdk_python.models.shared import (
    registrysubscription as shared_registrysubscription,
    subscriptiontype as shared_subscriptiontype,
)
from speakeasy_client_sdk_python.types import BaseModel
from speakeasy_client_sdk_python.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListRegistrySubscriptionsGlobalsTypedDict(TypedDict):
    workspace_id: NotRequired[str]


class ListRegistrySubscriptionsGlobals(BaseModel):
    workspace_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None


class ListRegistrySubscriptionsRequestTypedDict(TypedDict):
    workspace_id: NotRequired[str]
    r"""The workspace ID"""
    event_type: NotRequired[str]
    r"""The event type"""
    namespace_name: NotRequired[str]
    r"""The namespace name"""
    subscription_type: NotRequired[shared_subscriptiontype.SubscriptionType]
    r"""The subscription type"""
    tag: NotRequired[str]
    r"""The tag"""


class ListRegistrySubscriptionsRequest(BaseModel):
    workspace_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""The workspace ID"""

    event_type: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The event type"""

    namespace_name: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The namespace name"""

    subscription_type: Annotated[
        Optional[shared_subscriptiontype.SubscriptionType],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The subscription type"""

    tag: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The tag"""


class ListRegistrySubscriptionsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    classes: NotRequired[
        List[shared_registrysubscription.RegistrySubscriptionTypedDict]
    ]
    r"""OK"""


class ListRegistrySubscriptionsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    classes: Optional[List[shared_registrysubscription.RegistrySubscription]] = None
    r"""OK"""
