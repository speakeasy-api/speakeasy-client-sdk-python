"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from speakeasy_client_sdk_python.models.shared import (
    usagesnippets as shared_usagesnippets,
)
from speakeasy_client_sdk_python.types import BaseModel
from speakeasy_client_sdk_python.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetCodeSamplesRequestTypedDict(TypedDict):
    registry_url: str
    r"""The registry URL from which to retrieve the snippets. E.g. https://spec.speakeasy.com/org/ws/my-source"""
    operation_ids: NotRequired[List[str]]
    languages: NotRequired[List[str]]


class GetCodeSamplesRequest(BaseModel):
    registry_url: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""The registry URL from which to retrieve the snippets. E.g. https://spec.speakeasy.com/org/ws/my-source"""

    operation_ids: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    languages: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class GetCodeSamplesResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    usage_snippets: NotRequired[shared_usagesnippets.UsageSnippetsTypedDict]
    r"""OK"""


class GetCodeSamplesResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    usage_snippets: Optional[shared_usagesnippets.UsageSnippets] = None
    r"""OK"""
