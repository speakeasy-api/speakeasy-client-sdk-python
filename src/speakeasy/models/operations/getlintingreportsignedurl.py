"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from speakeasy import utils
from typing import Optional


@dataclasses.dataclass
class GetLintingReportSignedURLRequest:
    document_checksum: str = dataclasses.field(metadata={'path_param': { 'field_name': 'documentChecksum', 'style': 'simple', 'explode': False }})
    r"""The checksum of the document to retrieve the signed access url for."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLintingReportSignedURLSignedAccess:
    r"""OK"""
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    



@dataclasses.dataclass
class GetLintingReportSignedURLResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    signed_access: Optional[GetLintingReportSignedURLSignedAccess] = dataclasses.field(default=None)
    r"""OK"""
    

