"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from speakeasy import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GithubTriggerActionRequest:
    r"""A request to trigger an action on a GitHub target"""
    gen_lock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gen_lock_id') }})
    r"""The generation lock ID"""
    org: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('org') }})
    r"""The GitHub organization name"""
    repo_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repo_name') }})
    r"""The GitHub repository name"""
    target_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_name'), 'exclude': lambda f: f is None }})
    r"""The target name for the action"""
    

