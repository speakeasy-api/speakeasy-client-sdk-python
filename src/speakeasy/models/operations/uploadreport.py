"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import report as shared_report
from dataclasses_json import Undefined, dataclass_json
from speakeasy import utils
from typing import Optional


@dataclasses.dataclass
class File:
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})
    file_name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})
    



@dataclasses.dataclass
class UploadReportRequestBody:
    r"""The report file to upload provided as a multipart/form-data file segment."""
    data: shared_report.Report = dataclasses.field(metadata={'multipart_form': { 'field_name': 'data', 'json': True }})
    file: File = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UploadReportUploadedReport:
    r"""OK"""
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    



@dataclasses.dataclass
class UploadReportResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    uploaded_report: Optional[UploadReportUploadedReport] = dataclasses.field(default=None)
    r"""OK"""
    

