"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import accessdetails as shared_accessdetails
from typing import Optional


@dataclasses.dataclass
class GetWorkspaceAccessRequest:
    gen_lock_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'genLockId', 'style': 'form', 'explode': True }})
    r"""Unique identifier of the generation target."""
    



@dataclasses.dataclass
class GetWorkspaceAccessResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    access_details: Optional[shared_accessdetails.AccessDetails] = dataclasses.field(default=None)
    r"""OK"""
    

