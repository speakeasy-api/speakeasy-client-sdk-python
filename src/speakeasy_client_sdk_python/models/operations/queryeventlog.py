"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from speakeasy_client_sdk_python.models.shared import (
    boundedrequest as shared_boundedrequest,
    filters as shared_filters,
)
from speakeasy_client_sdk_python.types import BaseModel
from speakeasy_client_sdk_python.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class QueryEventLogRequestTypedDict(TypedDict):
    filters: NotRequired[shared_filters.FiltersTypedDict]
    r"""The filter to apply to the query."""


class QueryEventLogRequest(BaseModel):
    filters: Annotated[
        Optional[shared_filters.Filters],
        FieldMetadata(query=QueryParamMetadata(serialization="json")),
    ] = None
    r"""The filter to apply to the query."""


class QueryEventLogResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    bounded_requests: NotRequired[List[shared_boundedrequest.BoundedRequestTypedDict]]
    r"""OK"""


class QueryEventLogResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    bounded_requests: Optional[List[shared_boundedrequest.BoundedRequest]] = None
    r"""OK"""
