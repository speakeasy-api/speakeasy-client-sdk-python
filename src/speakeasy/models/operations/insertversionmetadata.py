"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import error as shared_error
from ...models.shared import versionmetadata as shared_versionmetadata
from ...models.shared import versionmetadata_input as shared_versionmetadata_input
from typing import Optional


@dataclasses.dataclass
class InsertVersionMetadataRequest:
    api_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'apiID', 'style': 'simple', 'explode': False }})
    r"""The ID of the Api to insert metadata for."""
    version_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'versionID', 'style': 'simple', 'explode': False }})
    r"""The version ID of the Api to insert metadata for."""
    version_metadata: shared_versionmetadata_input.VersionMetadataInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A JSON representation of the metadata to insert."""
    



@dataclasses.dataclass
class InsertVersionMetadataResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Default error response"""
    version_metadata: Optional[shared_versionmetadata.VersionMetadata] = dataclasses.field(default=None)
    r"""OK"""
    

