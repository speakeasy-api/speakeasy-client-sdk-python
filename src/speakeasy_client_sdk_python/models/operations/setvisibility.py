"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from speakeasy_client_sdk_python.types import BaseModel
from speakeasy_client_sdk_python.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SetVisibilityRequestBodyTypedDict(TypedDict):
    r"""Namespace visibility"""

    public: bool


class SetVisibilityRequestBody(BaseModel):
    r"""Namespace visibility"""

    public: bool


class SetVisibilityRequestTypedDict(TypedDict):
    namespace_name: str
    request_body: NotRequired[SetVisibilityRequestBodyTypedDict]
    r"""Namespace visibility"""


class SetVisibilityRequest(BaseModel):
    namespace_name: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    request_body: Annotated[
        Optional[SetVisibilityRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
    r"""Namespace visibility"""


class SetVisibilityResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""


class SetVisibilityResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
