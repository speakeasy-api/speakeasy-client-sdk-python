"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from speakeasy import utils
from typing import Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GithubStorePublishingSecretsRequest:
    r"""A request to store publishing secrets for a github target"""
    generate_gen_lock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generate_gen_lock_id') }})
    r"""The generation lock ID"""
    secrets: Optional[Dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secrets'), 'exclude': lambda f: f is None }})
    r"""A map of secrets to store in the GitHub target"""
    

