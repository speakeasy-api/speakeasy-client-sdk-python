"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.errors import error as errors_error
from ...models.shared import addtags as shared_addtags
from typing import Optional


@dataclasses.dataclass
class PostTagsRequest:
    namespace_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'namespace_name', 'style': 'simple', 'explode': False }})
    add_tags: Optional[shared_addtags.AddTags] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""A JSON representation of the tags to add"""
    



@dataclasses.dataclass
class PostTagsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    error: Optional[errors_error.Error] = dataclasses.field(default=None)
    r"""Default error response"""
    

