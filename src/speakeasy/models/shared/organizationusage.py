"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from speakeasy import utils
from typing import List


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrganizationUsage:
    accessible: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessible') }})
    r"""Indicates if the features are accessible"""
    accessible_features: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessible_features') }})
    r"""Features that are accessible"""
    gen_lock_ids: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gen_lock_ids') }})
    r"""List of generation lock IDs"""
    language: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language') }})
    r"""The programming language used"""
    number_of_operations: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_of_operations') }})
    r"""Number of operations performed"""
    used_features: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('used_features') }})
    r"""Features that have been used"""
    workspaces: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workspaces') }})
    r"""List of workspace IDs"""
    

