"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
import pydantic
from speakeasy_client_sdk_python.models.errors import error as errors_error
from speakeasy_client_sdk_python.types import BaseModel
from speakeasy_client_sdk_python.utils import FieldMetadata, HeaderMetadata, RequestMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ApplyOperationIDsRequestBodyTypedDict(TypedDict):
    r"""Apply options"""
    
    as_overlay: NotRequired[bool]
    r"""Whether to apply the suggestions as an overlay or replace the existing operationIDs. Default: false"""
    

class ApplyOperationIDsRequestBody(BaseModel):
    r"""Apply options"""
    
    as_overlay: Optional[bool] = None
    r"""Whether to apply the suggestions as an overlay or replace the existing operationIDs. Default: false"""
    

class ApplyOperationIDsRequestTypedDict(TypedDict):
    x_session_id: str
    request_body: NotRequired[ApplyOperationIDsRequestBodyTypedDict]
    r"""Apply options"""
    

class ApplyOperationIDsRequest(BaseModel):
    x_session_id: Annotated[str, pydantic.Field(alias="x-session-id"), FieldMetadata(header=HeaderMetadata(style="simple", explode=False))]
    request_body: Annotated[Optional[ApplyOperationIDsRequestBody], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    r"""Apply options"""
    

class ApplyOperationIDsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    two_hundred_application_json_schema: NotRequired[httpx.Response]
    r"""OK"""
    two_hundred_application_x_yaml_schema: NotRequired[httpx.Response]
    r"""OK"""
    error: NotRequired[errors_error.Error]
    r"""Default error response"""
    

class ApplyOperationIDsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    two_hundred_application_json_schema: Optional[httpx.Response] = None
    r"""OK"""
    two_hundred_application_x_yaml_schema: Optional[httpx.Response] = None
    r"""OK"""
    error: Optional[errors_error.Error] = None
    r"""Default error response"""
    
