"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
import httpx
from speakeasy_client_sdk_python.models.shared import targetsdk as shared_targetsdk
from speakeasy_client_sdk_python.types import BaseModel
from speakeasy_client_sdk_python.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetWorkspaceTargetsRequestTypedDict(TypedDict):
    after_last_event_created_at: NotRequired[datetime]
    r"""Filter to only return targets with events created after this timestamp"""


class GetWorkspaceTargetsRequest(BaseModel):
    after_last_event_created_at: Annotated[
        Optional[datetime],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filter to only return targets with events created after this timestamp"""


class GetWorkspaceTargetsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    target_sdk_list: NotRequired[List[shared_targetsdk.TargetSDKTypedDict]]
    r"""Success"""


class GetWorkspaceTargetsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    target_sdk_list: Optional[List[shared_targetsdk.TargetSDK]] = None
    r"""Success"""
