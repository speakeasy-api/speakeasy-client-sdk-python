"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.errors import error as errors_error
from ...models.shared import api as shared_api
from ...models.shared import api_input as shared_api_input
from typing import Optional


@dataclasses.dataclass
class UpsertAPIRequest:
    api: shared_api_input.APIInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A JSON representation of the Api to upsert"""
    api_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'apiID', 'style': 'simple', 'explode': False }})
    r"""The ID of the Api to upsert."""
    



@dataclasses.dataclass
class UpsertAPIResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    api: Optional[shared_api.API] = dataclasses.field(default=None)
    r"""OK"""
    error: Optional[errors_error.Error] = dataclasses.field(default=None)
    r"""Default error response"""
    

